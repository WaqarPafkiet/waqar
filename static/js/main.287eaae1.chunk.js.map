{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode2","htmlfor","toggleMode","htmlFor","TextForm","useState","text","setText","textAreaRef","useRef","style","color","heading","value","onChange","event","console","log","target","backgroundColor","ref","rows","newText","toUpperCase","showAlert","lowerCase","toLowerCase","current","select","document","execCommand","temp","replace","split","length","Alert","msg","defaultProps","about","App","setMode","alert","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.287eaae1.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/about\">{props.about}</a>\r\n                    </li> */}\r\n                    \r\n                    </ul>\r\n                    {/* <form className=\"d-flex\"> */}\r\n                    {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/> */}\r\n                    {/* <button className=\"btn btn-success\" type=\"submit\">Search</button> */}\r\n                    {/* </form> */}\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"form-check form-switch text\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode2} id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Green Mode</label>\r\n            </div>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Darkmode</label>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title: PropTypes.string.isRequired,\r\n    about:PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title:'Set title here',\r\n    about:'About text here'\r\n};\r\n","import React from 'react'\r\nimport { useState,useRef } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const handleUpclick=()=>{\r\n        console.log(\"uppercase button is clicked!\"+text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Upper Case is enabled!\",\"success\");\r\n    }\r\n    const handlelowclick=()=>{\r\n        let lowerCase = text.toLowerCase();\r\n        setText(lowerCase);\r\n        props.showAlert(\"Lower Case is enabled!\",\"success\");\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        console.log(\"on change\");\r\n        setText(event.target.value)\r\n    }\r\n    const clear=()=>{\r\n        \r\n        setText(\"\");\r\n    }\r\n\r\n    const [text, setText] = useState('Enter Text here!');\r\n    \r\n    const textAreaRef = useRef(null);\r\n\r\n    let copyToClipboard=()=> {\r\n\r\n        textAreaRef.current.select();\r\n        document.execCommand('copy');\r\n        props.showAlert(\"Text copied!\",\"success\");\r\n      };\r\n      \r\n      const formatString=()=>{\r\n    \r\n        let temp= text;\r\n        temp=temp.replace(/\\s+/g, ' ');\r\n        setText(temp);\r\n        props.showAlert(\"String formatted!\",\"success\");\r\n      }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>           \r\n        <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} \r\n                id=\"exampleFormControlTextarea1\" style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} \r\n                ref={textAreaRef} rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpclick}>Convert to upperCase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handlelowclick}>Convert to lowerCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={clear}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={copyToClipboard}>Copy</button>\r\n            <button onClick={formatString} className=\"btn btn-primary mx-1\" >Format String</button>\r\n        </div>\r\n\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h3>Your Text Summary</h3>\r\n            <p>{text.split(' ').length} Words and {text.length} charachters</p>\r\n            <p>{0.008*text.split(' ').length} minutes to read</p>\r\n            <h4>Preview</h4>\r\n            <p>{text.length > 0? text:'write something to preview here!'}</p>\r\n        </div>\r\n        </>\r\n    )   \r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n            props.Alert && <div className={`alert alert-${props.Alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.Alert.type} </strong>{props.Alert.msg} \r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        )\r\n}\r\n","//import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from \"./Components/Navbar\"\nimport TextForm from \"./Components/TextForm\"\nimport Alert from \"./Components/Alert\"\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const toggleMode2 =()=>{\n    if (mode==='light') {\n      setMode('dark');\n      document.body.style.backgroundColor=\"#2E8B57\";\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='azure';\n    }\n  }\n\n  const toggleMode=()=>{\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor=\"#06172e\";\n      showAlert(\"Dark mode has been enabled!\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"light mode has been enabled!\",\"success\");\n    }\n  }\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n  }\n  setTimeout(() => {\n    setAlert(null);\n  }, 1500);\n  \n  return (\n    <>\n    {/* <Router> */}\n      {/* <Navbar title={2} about=\"About HorseFly\"/> */}\n      <Navbar title=\"Horse Fly\" about=\"About\" mode={mode} toggleMode={toggleMode} toggleMode2={toggleMode2}/>\n      <Alert Alert={alert}/>\n      <div className=\"container\">\n\n      {/* <Routes> */}\n        {/* <Route exact path=\"/about\" element={<About/>}/> */}\n        {/* <About/> */}\n        <TextForm heading=\"Enter your text\" showAlert={showAlert} mode={mode}/>\n        {/* <Route exact path=\"/\" element={<TextForm heading=\"Enter your text\" showAlert={showAlert} mode={mode}/>}/> */}\n      {/* </Routes> */}\n      </div>  \n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}